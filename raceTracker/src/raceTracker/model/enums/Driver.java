package raceTracker.model.enums;

public enum Driver {
	carlosSainz(0),
	peterBelousov(37),
	rashidNair(70),
	daniilKvyat(1),
	klimekMichalski(38),
	jackTremblay(71),
	danielRicciardo(2),
	santiagoMoreno(39),
	antonioGiovinazzi(74),
	kimiRaeikkoenen(6),
	benjaminCoppens(40),
	robertKubica(70),
	lewisHamilton(7),
	noahVisser(41),
	nobuharuMatsushita(78),
	maxVerstappen(9),
	gertWaldmuller(42),
	nikitaMazepin(79),
	nicoHulkenburg(10),
	julianQuesada(43),
	guanyaZhou(80),
	kevinMagnussen(11),
	danielJones(44),
	mickSchumacher(81),
	romainGrosjean(12),
	artemMarkelov(45),
	callumIlott(82),
	sebastianVettel(13),
	tadasukeMakino(46),
	juanManuelCorrea(83),
	sergioPerez(14),
	seanGelael(47),
	jordanKing(84),
	valtteriBottas(15),
	nyckDeVries(48),
	mahaveerRaghunathan(85),
	estebanOcon(17),
	jackAitken(49),
	tatianaCalderon(86),
	lanceStroll(19),
	georgeRussell(50),
	anthoineHubert(87),
	arronBarnes(20),
	maximilianGuenther(51),
	guilianoAlesi(88),
	martinGiles(21),
	nireiFukuzumi(52),
	ralphBoschung(89),
	alexMurray(22),
	lucaGhiotto(53),
	lucasRoth(23),
	landoNorris(54),
	igorCorreia(24),
	sérgioSetteCâmara(55),
	sophieLevasseur(25),
	louisDelétraz(56),
	jonasSchiffer(26),
	antonioFuoco(57),
	alainForest(27),
	charlesLeclerc(58),
	jayLetourneau(28),
	pierreGasly(59),
	estoSaari(29),
	alexanderAlbon(62),
	yasarAtiyeh(30),
	nicholasLatifi(63),
	callistoCalabresi(31),
	dorianBoccolacci(64),
	naotaIzum(32),
	nikoKari(65),
	howardClarke(33),
	robertoMerhi(66),
	wilheimKaufmann(34),
	arjunMaini(67),
	marieLaursen(35),
	alessioLorandi(68),
	flavioNieves(36),
	rubenMeijer(69),
	human0(100),
	human1(101),
	human2(102),
	human3(103),
	human4(104),
	human5(105),
	human6(106),
	human7(107),
	human8(108),
	human9(109),
	human10(110),
	human11(111),
	human12(112),
	human13(113),
	human14(114),
	human15(115),
	human16(116),
	human17(117),
	human18(118),
	human19(119),
	human20(120),
	human21(121),
	human22(122),
	human23(123),
	human24(124),
	human25(125),
	human26(126),
	human27(127),
	human28(128),
	human29(129),
	human30(130),
	human31(131),
	human32(132),
	human33(133),
	human34(134),
	human35(135),
	human36(136),
	human37(137),
	human38(138),
	human39(139),
	human40(140),
	human41(141),
	human42(142),
	human43(143),
	human44(144),
	human45(145),
	human46(146),
	human47(147),
	human48(148),
	human49(149),
	human50(150),
	human51(151),
	human52(152),
	human53(153),
	human54(154),
	human55(155),
	human56(156),
	human57(157),
	human58(158),
	human59(159),
	human60(160),
	human61(161),
	human62(162),
	human63(163),
	human64(164),
	human65(165),
	human66(166),
	human67(167),
	human68(168),
	human69(169),
	human71(171),
	human72(172),
	human73(173),
	human74(174),
	human75(175),
	human76(176),
	human77(177),
	human78(178),
	human79(179),
	human80(180),
	human81(181),
	human82(182),
	human83(183),
	human84(184),
	human85(185),
	human86(186),
	human87(187),
	human88(188),
	human89(189),
	human90(190),
	human91(191),
	human92(192),
	human93(193),
	human94(194),
	human95(195),
	human96(196),
	human97(197),
	human98(198),
	human99(199);
	

	private final int driverKey;

	private Driver(int aDriverKey) {
		this.driverKey = aDriverKey;
	}

	public static Driver getTypeByKey(int aKey) {
		for (Driver aType : Driver.values()) {
			if (aType.driverKey == aKey)
				return aType;
		}
		throw new IllegalArgumentException("No type entry found for " + aKey);
	}
}
